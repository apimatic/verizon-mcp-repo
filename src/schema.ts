/**
 * ThingSpace Connectivity Management APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import EndpointSchemas from './schemaData.json' with { type: "json" };
import { $RefParser } from '@apidevtools/json-schema-ref-parser';
import { dirname, sep } from 'node:path';
import { fileURLToPath } from 'node:url';

const currentDir = dirname(fileURLToPath(import.meta.url)) + sep;

type Schema = {
    type: "object",
    properties?: Record<string, unknown>,
    required?: string[]
}

class Schemas {
    private readonly endpointSchemas = EndpointSchemas;

    async loadSchema(endpointGroup: string, endpointName: string): Promise<Schema> {

        const { properties: props, required: requiredProps } = this.endpointSchemas.endpoints.find(
            (endpoint) => endpoint.group === endpointGroup && endpoint.name === endpointName
        )?.schema.properties.args ?? {};

        const schema = {
            type: "object" as const,
            properties: props,
            required: requiredProps,
        };

        await $RefParser.bundle(currentDir, schema, {mutateInputSchema: true});

        return schema;
    }
}

export const schemas = new Schemas();