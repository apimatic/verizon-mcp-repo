/**
 * ThingSpace Connectivity Management APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  ConnectivityManagementSuccessResult,
  CreateDeviceGroupRequest,
  DeviceGroup,
  DeviceGroupsController,
} from '../src';
import { testClient } from './testClient';
import {
  expectHeadersToMatch,
  expectMatchingWithOptions,
  makeApiCall,
} from './testHelper';

describe('DeviceGroupsController', () => {
  let controller : DeviceGroupsController;

  beforeAll(() => {
    controller = new DeviceGroupsController(testClient);
  });

  it('should Test CreateDeviceGroup', async () => {
    const body: CreateDeviceGroupRequest = {
      accountName: '0000123456-00001',
      groupDescription: 'descriptive string',
      groupName: 'group name',
      devicesToAdd: [
        {
          id: '15-digit IMEI',
          kind: 'imei',
        }
      ],
    };

    const response = await makeApiCall(
      () => controller.createDeviceGroup(body)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ConnectivityManagementSuccessResult = {
      success: true,
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });

  it('should Test ListDeviceGroups', async () => {
    const aname = '0252012345-00001';

    const response = await makeApiCall(
      () => controller.listDeviceGroups(aname)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: DeviceGroup[] = [
      {
        description: 'All devices that are not in another device group.',
        extendedAttributes: [],
        isDefaultGroup: true,
        name: 'Unassigned Devices',
      },
      {
        description: '',
        extendedAttributes: [],
        isDefaultGroup: false,
        name: 'West Coast Devices',
      }
    ];

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });
});
