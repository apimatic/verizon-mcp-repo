/**
 * ThingSpace Connectivity Management APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  DeviceMonitoringController,
  NotificationReportRequest,
  StopMonitorRequest,
} from '../src';
import { testClient } from './testClient';
import { expectHeadersToMatch, makeApiCall } from './testHelper';

describe('DeviceMonitoringController', () => {
  let controller : DeviceMonitoringController;

  beforeAll(() => {
    controller = new DeviceMonitoringController(testClient);
  });

  it('should Test DeviceReachability', async () => {
    const body: NotificationReportRequest = {
      accountName: '0000123456-00001',
      requestType: 'REACHABLE_FOR_DATA',
      devices: [
        {
          deviceIds: [
            {
              id: '20-digit ICCID',
              kind: 'iccid',
            },
            {
              id: '20-digit ICCID',
              kind: 'iccid',
            }
          ],
        }
      ],
      monitorExpirationTime: '2019-12-02T15:00:00-08:00Z',
    };

    const response = await makeApiCall(
      () => controller.deviceReachability(body)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);
  });

  it('should Test StopDeviceReachability', async () => {
    const stopreachabilitypayload: StopMonitorRequest = {
      accountName: '0000123456-00001',
      monitorIds: [
        '35596ca6-eeee-ffff-gggg-42b4fc2da54c'
      ],
    };

    const response = await makeApiCall(
      () => controller.stopDeviceReachability(stopreachabilitypayload)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);
  });
});
