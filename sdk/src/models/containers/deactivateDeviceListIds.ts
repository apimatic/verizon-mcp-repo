/**
 * ThingSpace Connectivity Management APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import { DeviceId, deviceIdSchema } from '../deviceId';
import { PropertyDeviceId, propertyDeviceIdSchema } from '../propertyDeviceId';

/** This is a container type for any-of types. */
export type DeactivateDeviceListIds = DeviceId | PropertyDeviceId;

export const deactivateDeviceListIdsSchema: Schema<DeactivateDeviceListIds> = anyOf(
  [deviceIdSchema, propertyDeviceIdSchema]
);

export namespace DeactivateDeviceListIds {
  /**
   * Validation method to narrow down union type to DeviceId type case.
   *
   * This is DeviceId case.
   */
  export function isDeviceId(value: unknown): value is DeviceId {
    const validationResult = validateAndMap(value, deviceIdSchema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to PropertyDeviceId type case.
   *
   * This is PropertyDeviceId case.
   */
  export function isPropertyDeviceId(
    value: unknown
  ): value is PropertyDeviceId {
    const validationResult = validateAndMap(value, propertyDeviceIdSchema);
    return validationResult.errors === false;
  }
}
