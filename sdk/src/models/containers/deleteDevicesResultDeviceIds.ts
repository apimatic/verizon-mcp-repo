/**
 * ThingSpace Connectivity Management APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, oneOf, Schema, validateAndMap } from '../../schema';
import { DeviceId, deviceIdSchema } from '../deviceId';

/** This is a container type for one-of types. */
export type DeleteDevicesResultDeviceIds = DeviceId[] | DeviceId;

export const deleteDevicesResultDeviceIdsSchema: Schema<DeleteDevicesResultDeviceIds> = oneOf(
  [array(deviceIdSchema), deviceIdSchema]
);

export namespace DeleteDevicesResultDeviceIds {
  /**
   * Validation method to narrow down union type to DeviceId[] type case.
   *
   * This is Array of DeviceId case.
   */
  export function isArrayOfDeviceId(value: unknown): value is DeviceId[] {
    if (!Array.isArray(value)) {
      return false;
    }
    const validationResult = validateAndMap(value, array(deviceIdSchema));
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to DeviceId type case.
   *
   * This is DeviceId case.
   */
  export function isDeviceId(value: unknown): value is DeviceId {
    const validationResult = validateAndMap(value, deviceIdSchema);
    return validationResult.errors === false;
  }
}
